{"message":"for loop over an `Option`. This is more readably written as an `if let` statement","code":{"code":"for_loops_over_fallibles","explanation":null},"level":"warning","spans":[{"file_name":"src\\audio.rs","byte_start":8716,"byte_end":8769,"line_start":250,"line_end":250,"column_start":17,"column_end":70,"is_primary":true,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":17,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(for_loops_over_fallibles)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to check pattern in a loop use `while let`","code":null,"level":"help","spans":[{"file_name":"src\\audio.rs","byte_start":8704,"byte_end":8708,"line_start":250,"line_end":250,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"while let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\audio.rs","byte_start":8704,"byte_end":9589,"line_start":250,"line_end":271,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":5,"highlight_end":72},{"text":"        // stop any music currently playing","highlight_start":1,"highlight_end":44},{"text":"        if let Some(sink_handle) = &game_state.audio_manager.playing {","highlight_start":1,"highlight_end":71},{"text":"            if let Some(sink) = audio_sinks.get(sink_handle) {","highlight_start":1,"highlight_end":63},{"text":"                sink.stop();","highlight_start":1,"highlight_end":29},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        // start the new music...if we have some","highlight_start":1,"highlight_end":49},{"text":"        if let Some((music, volume)) = item {","highlight_start":1,"highlight_end":46},{"text":"            let music_path = format!(\"audio/{}\", music);","highlight_start":1,"highlight_end":57},{"text":"            let music_handle = asset_server.load(music_path.as_str());","highlight_start":1,"highlight_end":71},{"text":"            let sink_handle = audio_sinks.get_handle(audio.play_with_settings(","highlight_start":1,"highlight_end":79},{"text":"                music_handle,","highlight_start":1,"highlight_end":30},{"text":"                PlaybackSettings {","highlight_start":1,"highlight_end":35},{"text":"                    repeat: true,","highlight_start":1,"highlight_end":34},{"text":"                    volume,","highlight_start":1,"highlight_end":28},{"text":"                    ..Default::default()","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            ));","highlight_start":1,"highlight_end":16},{"text":"            game_state.audio_manager.playing = Some(sink_handle);","highlight_start":1,"highlight_end":66},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\audio.rs","byte_start":8712,"byte_end":8716,"line_start":250,"line_end":250,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider using `if let` to clear intent","code":null,"level":"help","spans":[{"file_name":"src\\audio.rs","byte_start":8704,"byte_end":8708,"line_start":250,"line_end":250,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"if let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\audio.rs","byte_start":8704,"byte_end":9589,"line_start":250,"line_end":271,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":5,"highlight_end":72},{"text":"        // stop any music currently playing","highlight_start":1,"highlight_end":44},{"text":"        if let Some(sink_handle) = &game_state.audio_manager.playing {","highlight_start":1,"highlight_end":71},{"text":"            if let Some(sink) = audio_sinks.get(sink_handle) {","highlight_start":1,"highlight_end":63},{"text":"                sink.stop();","highlight_start":1,"highlight_end":29},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        // start the new music...if we have some","highlight_start":1,"highlight_end":49},{"text":"        if let Some((music, volume)) = item {","highlight_start":1,"highlight_end":46},{"text":"            let music_path = format!(\"audio/{}\", music);","highlight_start":1,"highlight_end":57},{"text":"            let music_handle = asset_server.load(music_path.as_str());","highlight_start":1,"highlight_end":71},{"text":"            let sink_handle = audio_sinks.get_handle(audio.play_with_settings(","highlight_start":1,"highlight_end":79},{"text":"                music_handle,","highlight_start":1,"highlight_end":30},{"text":"                PlaybackSettings {","highlight_start":1,"highlight_end":35},{"text":"                    repeat: true,","highlight_start":1,"highlight_end":34},{"text":"                    volume,","highlight_start":1,"highlight_end":28},{"text":"                    ..Default::default()","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            ));","highlight_start":1,"highlight_end":16},{"text":"            game_state.audio_manager.playing = Some(sink_handle);","highlight_start":1,"highlight_end":66},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\audio.rs","byte_start":8712,"byte_end":8716,"line_start":250,"line_end":250,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    for item in game_state.audio_manager.music_queue.drain(..).last() {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: for loop over an `Option`. This is more readably written as an `if let` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\audio.rs:250:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for item in game_state.audio_manager.music_queue.drain(..).last() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(for_loops_over_fallibles)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to check pattern in a loop use `while let`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mwhile let Some(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0mgame_state.audio_manager.music_queue.drain(..).last() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `if let` to clear intent\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif let Some(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0mgame_state.audio_manager.music_queue.drain(..).last() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m~~~\u001b[0m\n\n"}
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 1 warning emitted\u001b[0m\n\n"}
